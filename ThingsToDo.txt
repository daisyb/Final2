Stuff we have to do going forward:

1)Create a board/Figure out how to randomly generate new  boards
	 - both a graphic board that appears on screen, and a stored version of the board for our code
2)Create a system of movement throughout the board (up, down, left, right)
	 - should recognize where the piece is in relation to the walls.
3)Make it so the player can use the keyboard to access the movement functions
4)Modify a maze solving algorithm to fit our project
5)Use the algorithm to have the computer piece move on it's own at varying speeds
6)Mess around with settings to create different difficulties.

7?? Should we have multiple levels? Like each level it gets a little harder (in terms of speed, complexity, etc.)
8?? System of scoring? Maybe based on how long it took you to solve the puzzle or how many moves or how close the computer piece was to solving it???

Have 4 different modes: easy, medium, hard and satan (in satan mode the algorithm for moving will run in real time)
~random maze generator, but then we would have to determine where we want to place the pieces and where we should 
make an exit
~scoring is based on the amount of moves the opponent is away from the goal
~5 levels per mode? I think we should make the mazes larger for each level


Anything to add?



//What I learned this period
Idk if you'll see this next period or like tomorrow when it totally isn't useful
but this is what I figured out today (it ain't much):
to use processing at school type:
   cd /usr/local/processing	-->
   ./processing			-->
 
really simple tutorial:
https://www.processing.org/tutorials/gettingstarted/
